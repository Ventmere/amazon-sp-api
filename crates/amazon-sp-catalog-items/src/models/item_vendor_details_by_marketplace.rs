/*
 * Selling Partner API for Catalog Items
 *
 * The Selling Partner API for Catalog Items provides programmatic access to information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](doc:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ItemVendorDetailsByMarketplace : Vendor details associated with an Amazon catalog item for the indicated Amazon marketplace.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ItemVendorDetailsByMarketplace {
    /// Amazon marketplace identifier.
    #[serde(rename = "marketplaceId")]
    pub marketplace_id: String,
    /// Brand code associated with an Amazon catalog item.
    #[serde(rename = "brandCode", skip_serializing_if = "Option::is_none")]
    pub brand_code: Option<String>,
    /// Manufacturer code associated with an Amazon catalog item.
    #[serde(rename = "manufacturerCode", skip_serializing_if = "Option::is_none")]
    pub manufacturer_code: Option<String>,
    /// Parent vendor code of the manufacturer code.
    #[serde(rename = "manufacturerCodeParent", skip_serializing_if = "Option::is_none")]
    pub manufacturer_code_parent: Option<String>,
    #[serde(rename = "productCategory", skip_serializing_if = "Option::is_none")]
    pub product_category: Option<Box<crate::models::ItemVendorDetailsCategory>>,
    /// Product group associated with an Amazon catalog item.
    #[serde(rename = "productGroup", skip_serializing_if = "Option::is_none")]
    pub product_group: Option<String>,
    #[serde(rename = "productSubcategory", skip_serializing_if = "Option::is_none")]
    pub product_subcategory: Option<Box<crate::models::ItemVendorDetailsCategory>>,
    /// Replenishment category associated with an Amazon catalog item.
    #[serde(rename = "replenishmentCategory", skip_serializing_if = "Option::is_none")]
    pub replenishment_category: Option<ReplenishmentCategory>,
}

impl ItemVendorDetailsByMarketplace {
    /// Vendor details associated with an Amazon catalog item for the indicated Amazon marketplace.
    pub fn new(marketplace_id: String) -> ItemVendorDetailsByMarketplace {
        ItemVendorDetailsByMarketplace {
            marketplace_id,
            brand_code: None,
            manufacturer_code: None,
            manufacturer_code_parent: None,
            product_category: None,
            product_group: None,
            product_subcategory: None,
            replenishment_category: None,
        }
    }
}

/// Replenishment category associated with an Amazon catalog item.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReplenishmentCategory {
    #[serde(rename = "ALLOCATED")]
    ALLOCATED,
    #[serde(rename = "BASIC_REPLENISHMENT")]
    BASICREPLENISHMENT,
    #[serde(rename = "IN_SEASON")]
    INSEASON,
    #[serde(rename = "LIMITED_REPLENISHMENT")]
    LIMITEDREPLENISHMENT,
    #[serde(rename = "MANUFACTURER_OUT_OF_STOCK")]
    MANUFACTUREROUTOFSTOCK,
    #[serde(rename = "NEW_PRODUCT")]
    NEWPRODUCT,
    #[serde(rename = "NON_REPLENISHABLE")]
    NONREPLENISHABLE,
    #[serde(rename = "NON_STOCKUPABLE")]
    NONSTOCKUPABLE,
    #[serde(rename = "OBSOLETE")]
    OBSOLETE,
    #[serde(rename = "PLANNED_REPLENISHMENT")]
    PLANNEDREPLENISHMENT,
}

impl Default for ReplenishmentCategory {
    fn default() -> ReplenishmentCategory {
        Self::ALLOCATED
    }
}

