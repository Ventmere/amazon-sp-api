/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PayWithAmazonEvent : An event related to the seller's Pay with Amazon account.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PayWithAmazonEvent {
    /// An order identifier that is specified by the seller.
    #[serde(default, rename = "SellerOrderId", skip_serializing_if = "Option::is_none")]
    pub seller_order_id: Option<String>,
    #[serde(default, rename = "TransactionPostedDate", skip_serializing_if = "Option::is_none")]
    pub transaction_posted_date: Option<String>,
    /// The type of business object.
    #[serde(default, rename = "BusinessObjectType", skip_serializing_if = "Option::is_none")]
    pub business_object_type: Option<String>,
    /// The sales channel for the transaction.
    #[serde(default, rename = "SalesChannel", skip_serializing_if = "Option::is_none")]
    pub sales_channel: Option<String>,
    #[serde(default, rename = "Charge", skip_serializing_if = "Option::is_none")]
    pub charge: Option<Box<crate::models::ChargeComponent>>,
    /// A list of fee component information.
    #[serde(default, rename = "FeeList", skip_serializing_if = "Option::is_none")]
    pub fee_list: Option<Vec<crate::models::FeeComponent>>,
    /// The type of payment.  Possible values:  * Sales
    #[serde(default, rename = "PaymentAmountType", skip_serializing_if = "Option::is_none")]
    pub payment_amount_type: Option<String>,
    /// A short description of this payment event.
    #[serde(default, rename = "AmountDescription", skip_serializing_if = "Option::is_none")]
    pub amount_description: Option<String>,
    /// The fulfillment channel.  Possible values:  * AFN - Amazon Fulfillment Network (Fulfillment by Amazon)  * MFN - Merchant Fulfillment Network (self-fulfilled)
    #[serde(default, rename = "FulfillmentChannel", skip_serializing_if = "Option::is_none")]
    pub fulfillment_channel: Option<String>,
    /// The store name where the event occurred.
    #[serde(default, rename = "StoreName", skip_serializing_if = "Option::is_none")]
    pub store_name: Option<String>,
}

impl PayWithAmazonEvent {
    /// An event related to the seller's Pay with Amazon account.
    pub fn new() -> PayWithAmazonEvent {
        PayWithAmazonEvent {
            seller_order_id: None,
            transaction_posted_date: None,
            business_object_type: None,
            sales_channel: None,
            charge: None,
            fee_list: None,
            payment_amount_type: None,
            amount_description: None,
            fulfillment_channel: None,
            store_name: None,
        }
    }
}


