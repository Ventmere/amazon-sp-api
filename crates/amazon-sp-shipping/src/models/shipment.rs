/*
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Shipment : The shipment related data.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Shipment {
    /// The unique shipment identifier.
    #[serde(rename = "shipmentId")]
    pub shipment_id: String,
    /// Client reference id.
    #[serde(rename = "clientReferenceId")]
    pub client_reference_id: String,
    #[serde(rename = "shipFrom")]
    pub ship_from: Box<crate::models::Address>,
    #[serde(rename = "shipTo")]
    pub ship_to: Box<crate::models::Address>,
    #[serde(rename = "acceptedRate", skip_serializing_if = "Option::is_none")]
    pub accepted_rate: Option<Box<crate::models::AcceptedRate>>,
    #[serde(rename = "shipper", skip_serializing_if = "Option::is_none")]
    pub shipper: Option<Box<crate::models::Party>>,
    /// A list of container.
    #[serde(rename = "containers")]
    pub containers: Vec<crate::models::Container>,
}

impl Shipment {
    /// The shipment related data.
    pub fn new(shipment_id: String, client_reference_id: String, ship_from: crate::models::Address, ship_to: crate::models::Address, containers: Vec<crate::models::Container>) -> Shipment {
        Shipment {
            shipment_id,
            client_reference_id,
            ship_from: Box::new(ship_from),
            ship_to: Box::new(ship_to),
            accepted_rate: None,
            shipper: None,
            containers,
        }
    }
}


