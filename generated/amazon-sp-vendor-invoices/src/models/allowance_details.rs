/*
 * Selling Partner API for Retail Procurement Payments
 *
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AllowanceDetails : Monetary and tax details of the allowance.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AllowanceDetails {
    /// Type of the allowance applied.
    #[serde(default, rename = "type")]
    pub _type: Type,
    /// Description of the allowance.
    #[serde(default, rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(default, rename = "allowanceAmount")]
    pub allowance_amount: Box<crate::models::Money>,
    /// Tax amount details applied on this allowance.
    #[serde(default, rename = "taxDetails", skip_serializing_if = "Option::is_none")]
    pub tax_details: Option<Vec<crate::models::TaxDetails>>,
}

impl AllowanceDetails {
    /// Monetary and tax details of the allowance.
    pub fn new(_type: Type, allowance_amount: crate::models::Money) -> AllowanceDetails {
        AllowanceDetails {
            _type,
            description: None,
            allowance_amount: Box::new(allowance_amount),
            tax_details: None,
        }
    }
}

/// Type of the allowance applied.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Discount")]
    Discount,
    #[serde(rename = "DiscountIncentive")]
    DiscountIncentive,
    #[serde(rename = "Defective")]
    Defective,
    #[serde(rename = "Promotional")]
    Promotional,
    #[serde(rename = "UnsaleableMerchandise")]
    UnsaleableMerchandise,
    #[serde(rename = "Special")]
    Special,
}

impl Default for Type {
    fn default() -> Type {
        Self::Discount
    }
}

