/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// FinancialEvents : Contains all information related to a financial event.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FinancialEvents {
    /// A list of shipment event information.
    #[serde(default, rename = "ShipmentEventList", skip_serializing_if = "Option::is_none")]
    pub shipment_event_list: Option<Vec<crate::models::ShipmentEvent>>,
    /// A list of `ShipmentEvent` items.
    #[serde(default, rename = "ShipmentSettleEventList", skip_serializing_if = "Option::is_none")]
    pub shipment_settle_event_list: Option<Vec<crate::models::ShipmentEvent>>,
    /// A list of shipment event information.
    #[serde(default, rename = "RefundEventList", skip_serializing_if = "Option::is_none")]
    pub refund_event_list: Option<Vec<crate::models::ShipmentEvent>>,
    /// A list of shipment event information.
    #[serde(default, rename = "GuaranteeClaimEventList", skip_serializing_if = "Option::is_none")]
    pub guarantee_claim_event_list: Option<Vec<crate::models::ShipmentEvent>>,
    /// A list of shipment event information.
    #[serde(default, rename = "ChargebackEventList", skip_serializing_if = "Option::is_none")]
    pub chargeback_event_list: Option<Vec<crate::models::ShipmentEvent>>,
    /// A list of events related to the seller's Pay with Amazon account.
    #[serde(default, rename = "PayWithAmazonEventList", skip_serializing_if = "Option::is_none")]
    pub pay_with_amazon_event_list: Option<Vec<crate::models::PayWithAmazonEvent>>,
    /// A list of information about solution provider credits.
    #[serde(default, rename = "ServiceProviderCreditEventList", skip_serializing_if = "Option::is_none")]
    pub service_provider_credit_event_list: Option<Vec<crate::models::SolutionProviderCreditEvent>>,
    /// A list of information about Retrocharge or RetrochargeReversal events.
    #[serde(default, rename = "RetrochargeEventList", skip_serializing_if = "Option::is_none")]
    pub retrocharge_event_list: Option<Vec<crate::models::RetrochargeEvent>>,
    /// A list of rental transaction event information.
    #[serde(default, rename = "RentalTransactionEventList", skip_serializing_if = "Option::is_none")]
    pub rental_transaction_event_list: Option<Vec<crate::models::RentalTransactionEvent>>,
    /// A list of sponsored products payment events.
    #[serde(default, rename = "ProductAdsPaymentEventList", skip_serializing_if = "Option::is_none")]
    pub product_ads_payment_event_list: Option<Vec<crate::models::ProductAdsPaymentEvent>>,
    /// A list of information about service fee events.
    #[serde(default, rename = "ServiceFeeEventList", skip_serializing_if = "Option::is_none")]
    pub service_fee_event_list: Option<Vec<crate::models::ServiceFeeEvent>>,
    /// A list of payment events for deal-related fees.
    #[serde(default, rename = "SellerDealPaymentEventList", skip_serializing_if = "Option::is_none")]
    pub seller_deal_payment_event_list: Option<Vec<crate::models::SellerDealPaymentEvent>>,
    /// A list of debt recovery event information.
    #[serde(default, rename = "DebtRecoveryEventList", skip_serializing_if = "Option::is_none")]
    pub debt_recovery_event_list: Option<Vec<crate::models::DebtRecoveryEvent>>,
    /// A list of loan servicing events.
    #[serde(default, rename = "LoanServicingEventList", skip_serializing_if = "Option::is_none")]
    pub loan_servicing_event_list: Option<Vec<crate::models::LoanServicingEvent>>,
    /// A list of adjustment event information for the seller's account.
    #[serde(default, rename = "AdjustmentEventList", skip_serializing_if = "Option::is_none")]
    pub adjustment_event_list: Option<Vec<crate::models::AdjustmentEvent>>,
    /// A list of SAFETReimbursementEvents.
    #[serde(default, rename = "SAFETReimbursementEventList", skip_serializing_if = "Option::is_none")]
    pub safet_reimbursement_event_list: Option<Vec<crate::models::SafetReimbursementEvent>>,
    /// A list of information about fee events for the Early Reviewer Program.
    #[serde(default, rename = "SellerReviewEnrollmentPaymentEventList", skip_serializing_if = "Option::is_none")]
    pub seller_review_enrollment_payment_event_list: Option<Vec<crate::models::SellerReviewEnrollmentPaymentEvent>>,
    /// A list of FBA inventory liquidation payment events.
    #[serde(default, rename = "FBALiquidationEventList", skip_serializing_if = "Option::is_none")]
    pub fba_liquidation_event_list: Option<Vec<crate::models::FbaLiquidationEvent>>,
    /// A list of coupon payment event information.
    #[serde(default, rename = "CouponPaymentEventList", skip_serializing_if = "Option::is_none")]
    pub coupon_payment_event_list: Option<Vec<crate::models::CouponPaymentEvent>>,
    /// A list of fee events related to Amazon Imaging services.
    #[serde(default, rename = "ImagingServicesFeeEventList", skip_serializing_if = "Option::is_none")]
    pub imaging_services_fee_event_list: Option<Vec<crate::models::ImagingServicesFeeEvent>>,
    /// A list of network commingling transaction events.
    #[serde(default, rename = "NetworkComminglingTransactionEventList", skip_serializing_if = "Option::is_none")]
    pub network_commingling_transaction_event_list: Option<Vec<crate::models::NetworkComminglingTransactionEvent>>,
    /// A list of expense information related to an affordability promotion.
    #[serde(default, rename = "AffordabilityExpenseEventList", skip_serializing_if = "Option::is_none")]
    pub affordability_expense_event_list: Option<Vec<crate::models::AffordabilityExpenseEvent>>,
    /// A list of expense information related to an affordability promotion.
    #[serde(default, rename = "AffordabilityExpenseReversalEventList", skip_serializing_if = "Option::is_none")]
    pub affordability_expense_reversal_event_list: Option<Vec<crate::models::AffordabilityExpenseEvent>>,
    /// A list of removal shipment event information.
    #[serde(default, rename = "RemovalShipmentEventList", skip_serializing_if = "Option::is_none")]
    pub removal_shipment_event_list: Option<Vec<crate::models::RemovalShipmentEvent>>,
    /// A comma-delimited list of Removal shipmentAdjustment details for FBA inventory.
    #[serde(default, rename = "RemovalShipmentAdjustmentEventList", skip_serializing_if = "Option::is_none")]
    pub removal_shipment_adjustment_event_list: Option<Vec<crate::models::RemovalShipmentAdjustmentEvent>>,
    /// A list of information about trial shipment financial events.
    #[serde(default, rename = "TrialShipmentEventList", skip_serializing_if = "Option::is_none")]
    pub trial_shipment_event_list: Option<Vec<crate::models::TrialShipmentEvent>>,
    /// A list of `TDSReimbursementEvent` items.
    #[serde(default, rename = "TDSReimbursementEventList", skip_serializing_if = "Option::is_none")]
    pub tds_reimbursement_event_list: Option<Vec<crate::models::TdsReimbursementEvent>>,
    /// A list of `AdhocDisbursement` events.
    #[serde(default, rename = "AdhocDisbursementEventList", skip_serializing_if = "Option::is_none")]
    pub adhoc_disbursement_event_list: Option<Vec<crate::models::AdhocDisbursementEvent>>,
    /// A list of `TaxWithholding` events.
    #[serde(default, rename = "TaxWithholdingEventList", skip_serializing_if = "Option::is_none")]
    pub tax_withholding_event_list: Option<Vec<crate::models::TaxWithholdingEvent>>,
    /// A list of charge refund events.
    #[serde(default, rename = "ChargeRefundEventList", skip_serializing_if = "Option::is_none")]
    pub charge_refund_event_list: Option<Vec<crate::models::ChargeRefundEvent>>,
    #[serde(default, rename = "FailedAdhocDisbursementEventList", skip_serializing_if = "Option::is_none")]
    pub failed_adhoc_disbursement_event_list: Option<Box<crate::models::FailedAdhocDisbursementEventList>>,
    #[serde(default, rename = "ValueAddedServiceChargeEventList", skip_serializing_if = "Option::is_none")]
    pub value_added_service_charge_event_list: Option<Box<crate::models::ValueAddedServiceChargeEventList>>,
    /// A list of `CapacityReservationBillingEvent` events.
    #[serde(default, rename = "CapacityReservationBillingEventList", skip_serializing_if = "Option::is_none")]
    pub capacity_reservation_billing_event_list: Option<Vec<crate::models::CapacityReservationBillingEvent>>,
}

impl FinancialEvents {
    /// Contains all information related to a financial event.
    pub fn new() -> FinancialEvents {
        FinancialEvents {
            shipment_event_list: None,
            shipment_settle_event_list: None,
            refund_event_list: None,
            guarantee_claim_event_list: None,
            chargeback_event_list: None,
            pay_with_amazon_event_list: None,
            service_provider_credit_event_list: None,
            retrocharge_event_list: None,
            rental_transaction_event_list: None,
            product_ads_payment_event_list: None,
            service_fee_event_list: None,
            seller_deal_payment_event_list: None,
            debt_recovery_event_list: None,
            loan_servicing_event_list: None,
            adjustment_event_list: None,
            safet_reimbursement_event_list: None,
            seller_review_enrollment_payment_event_list: None,
            fba_liquidation_event_list: None,
            coupon_payment_event_list: None,
            imaging_services_fee_event_list: None,
            network_commingling_transaction_event_list: None,
            affordability_expense_event_list: None,
            affordability_expense_reversal_event_list: None,
            removal_shipment_event_list: None,
            removal_shipment_adjustment_event_list: None,
            trial_shipment_event_list: None,
            tds_reimbursement_event_list: None,
            adhoc_disbursement_event_list: None,
            tax_withholding_event_list: None,
            charge_refund_event_list: None,
            failed_adhoc_disbursement_event_list: None,
            value_added_service_charge_event_list: None,
            capacity_reservation_billing_event_list: None,
        }
    }
}


