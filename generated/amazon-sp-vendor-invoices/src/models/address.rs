/*
 * Selling Partner API for Retail Procurement Payments
 *
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Address : A physical address.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Address {
    /// The name of the person, business or institution at that address.
    #[serde(default, rename = "name")]
    pub name: String,
    /// First line of street address.
    #[serde(default, rename = "addressLine1")]
    pub address_line1: String,
    /// Additional address information, if required.
    #[serde(default, rename = "addressLine2", skip_serializing_if = "Option::is_none")]
    pub address_line2: Option<String>,
    /// Additional address information, if required.
    #[serde(default, rename = "addressLine3", skip_serializing_if = "Option::is_none")]
    pub address_line3: Option<String>,
    /// The city where the person, business or institution is located.
    #[serde(default, rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    /// The county where person, business or institution is located.
    #[serde(default, rename = "county", skip_serializing_if = "Option::is_none")]
    pub county: Option<String>,
    /// The district where person, business or institution is located.
    #[serde(default, rename = "district", skip_serializing_if = "Option::is_none")]
    pub district: Option<String>,
    /// The state or region where person, business or institution is located.
    #[serde(default, rename = "stateOrRegion", skip_serializing_if = "Option::is_none")]
    pub state_or_region: Option<String>,
    /// The postal or zip code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation.
    #[serde(default, rename = "postalOrZipCode", skip_serializing_if = "Option::is_none")]
    pub postal_or_zip_code: Option<String>,
    /// The two digit country code. In ISO 3166-1 alpha-2 format.
    #[serde(default, rename = "countryCode")]
    pub country_code: String,
    /// The phone number of the person, business or institution located at that address.
    #[serde(default, rename = "phone", skip_serializing_if = "Option::is_none")]
    pub phone: Option<String>,
}

impl Address {
    /// A physical address.
    pub fn new(name: String, address_line1: String, country_code: String) -> Address {
        Address {
            name,
            address_line1,
            address_line2: None,
            address_line3: None,
            city: None,
            county: None,
            district: None,
            state_or_region: None,
            postal_or_zip_code: None,
            country_code,
            phone: None,
        }
    }
}


