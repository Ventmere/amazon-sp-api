/*
 * Selling Partner API for Services
 *
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// UpdateScheduleRecord : `UpdateScheduleRecord` entity contains the `AvailabilityRecord` if there is an error/warning while performing the requested operation on it.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdateScheduleRecord {
    #[serde(default, rename = "availability", skip_serializing_if = "Option::is_none")]
    pub availability: Option<Box<crate::models::AvailabilityRecord>>,
    /// A list of warnings returned in the sucessful execution response of an API request.
    #[serde(default, rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<crate::models::Warning>>,
    /// A list of error responses returned when a request is unsuccessful.
    #[serde(default, rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<crate::models::Error>>,
}

impl UpdateScheduleRecord {
    /// `UpdateScheduleRecord` entity contains the `AvailabilityRecord` if there is an error/warning while performing the requested operation on it.
    pub fn new() -> UpdateScheduleRecord {
        UpdateScheduleRecord {
            availability: None,
            warnings: None,
            errors: None,
        }
    }
}


