/*
 * Selling Partner API for Messaging
 *
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Attachment : Represents a file uploaded to a destination that was created by the createUploadDestination operation of the Uploads API.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Attachment {
    /// The identifier of the upload destination. Get this value by calling the createUploadDestination operation of the Uploads API.
    #[serde(rename = "uploadDestinationId")]
    pub upload_destination_id: String,
    /// The name of the file, including the extension. This is the file name that will appear in the message. This does not need to match the file name of the file that you uploaded.
    #[serde(rename = "fileName")]
    pub file_name: String,
}

impl Attachment {
    /// Represents a file uploaded to a destination that was created by the createUploadDestination operation of the Uploads API.
    pub fn new(upload_destination_id: String, file_name: String) -> Attachment {
        Attachment {
            upload_destination_id,
            file_name,
        }
    }
}


