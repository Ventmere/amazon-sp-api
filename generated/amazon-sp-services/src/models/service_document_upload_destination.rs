/*
 * Selling Partner API for Services
 *
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ServiceDocumentUploadDestination : Information about an upload destination.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ServiceDocumentUploadDestination {
    /// The unique identifier to be used by APIs that reference the upload destination.
    #[serde(rename = "uploadDestinationId")]
    pub upload_destination_id: String,
    /// The URL to which to upload the file.
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "encryptionDetails")]
    pub encryption_details: Box<crate::models::EncryptionDetails>,
    /// The headers to include in the upload request.
    #[serde(rename = "headers", skip_serializing_if = "Option::is_none")]
    pub headers: Option<serde_json::Value>,
}

impl ServiceDocumentUploadDestination {
    /// Information about an upload destination.
    pub fn new(upload_destination_id: String, url: String, encryption_details: crate::models::EncryptionDetails) -> ServiceDocumentUploadDestination {
        ServiceDocumentUploadDestination {
            upload_destination_id,
            url,
            encryption_details: Box::new(encryption_details),
            headers: None,
        }
    }
}


