/*
 * Selling Partner API for Services
 *
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Reservation : Reservation object reduces the capacity of a resource.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Reservation {
    /// Unique identifier for a reservation. If present, it is treated as an update reservation request and will update the corresponding reservation. Otherwise, it is treated as a new create reservation request.
    #[serde(rename = "reservationId", skip_serializing_if = "Option::is_none")]
    pub reservation_id: Option<String>,
    /// Type of reservation.
    #[serde(rename = "type")]
    pub _type: Type,
    #[serde(rename = "availability")]
    pub availability: Box<crate::models::AvailabilityRecord>,
}

impl Reservation {
    /// Reservation object reduces the capacity of a resource.
    pub fn new(_type: Type, availability: crate::models::AvailabilityRecord) -> Reservation {
        Reservation {
            reservation_id: None,
            _type,
            availability: Box::new(availability),
        }
    }
}

/// Type of reservation.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "APPOINTMENT")]
    APPOINTMENT,
    #[serde(rename = "TRAVEL")]
    TRAVEL,
    #[serde(rename = "VACATION")]
    VACATION,
    #[serde(rename = "BREAK")]
    _BREAK,
    #[serde(rename = "TRAINING")]
    TRAINING,
}

impl Default for Type {
    fn default() -> Type {
        Self::APPOINTMENT
    }
}

