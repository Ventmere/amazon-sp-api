/*
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.   **Note:** If you are new to the Amazon Shipping API, refer to the latest version of <a href=\"https://developer-docs.amazon.com/amazon-shipping/docs/shipping-api-v2-reference\">Amazon Shipping API (v2)</a> on the <a href=\"https://developer-docs.amazon.com/amazon-shipping/\">Amazon Shipping Developer Documentation</a> site.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Address : The address.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Address {
    /// The name of the person, business or institution at that address.
    #[serde(rename = "name")]
    pub name: String,
    /// First line of that address.
    #[serde(rename = "addressLine1")]
    pub address_line1: String,
    /// Additional address information, if required.
    #[serde(rename = "addressLine2", skip_serializing_if = "Option::is_none")]
    pub address_line2: Option<String>,
    /// Additional address information, if required.
    #[serde(rename = "addressLine3", skip_serializing_if = "Option::is_none")]
    pub address_line3: Option<String>,
    /// The state or region where the person, business or institution is located.
    #[serde(rename = "stateOrRegion")]
    pub state_or_region: String,
    /// The city where the person, business or institution is located.
    #[serde(rename = "city")]
    pub city: String,
    /// The two digit country code. In ISO 3166-1 alpha-2 format.
    #[serde(rename = "countryCode")]
    pub country_code: String,
    /// The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation.
    #[serde(rename = "postalCode")]
    pub postal_code: String,
    /// The email address of the contact associated with the address.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// The email cc addresses of the contact associated with the address.
    #[serde(rename = "copyEmails", skip_serializing_if = "Option::is_none")]
    pub copy_emails: Option<Vec<String>>,
    /// The phone number of the person, business or institution located at that address.
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
}

impl Address {
    /// The address.
    pub fn new(name: String, address_line1: String, state_or_region: String, city: String, country_code: String, postal_code: String) -> Address {
        Address {
            name,
            address_line1,
            address_line2: None,
            address_line3: None,
            state_or_region,
            city,
            country_code,
            postal_code,
            email: None,
            copy_emails: None,
            phone_number: None,
        }
    }
}


