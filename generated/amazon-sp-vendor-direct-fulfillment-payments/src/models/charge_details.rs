/*
 * Selling Partner API for Direct Fulfillment Payments
 *
 * The Selling Partner API for Direct Fulfillment Payments provides programmatic access to a direct fulfillment vendor's invoice data.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ChargeDetails : Monetary and tax details of the charge.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ChargeDetails {
    /// Type of charge applied.
    #[serde(rename = "type")]
    pub _type: Type,
    #[serde(rename = "chargeAmount")]
    pub charge_amount: Box<crate::models::Money>,
    /// Individual tax details per line item.
    #[serde(rename = "taxDetails", skip_serializing_if = "Option::is_none")]
    pub tax_details: Option<Vec<crate::models::TaxDetail>>,
}

impl ChargeDetails {
    /// Monetary and tax details of the charge.
    pub fn new(_type: Type, charge_amount: crate::models::Money) -> ChargeDetails {
        ChargeDetails {
            _type,
            charge_amount: Box::new(charge_amount),
            tax_details: None,
        }
    }
}

/// Type of charge applied.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "GIFTWRAP")]
    GIFTWRAP,
    #[serde(rename = "FULFILLMENT")]
    FULFILLMENT,
    #[serde(rename = "MARKETINGINSERT")]
    MARKETINGINSERT,
    #[serde(rename = "PACKAGING")]
    PACKAGING,
    #[serde(rename = "LOADING")]
    LOADING,
    #[serde(rename = "FREIGHTOUT")]
    FREIGHTOUT,
    #[serde(rename = "TAX_COLLECTED_AT_SOURCE")]
    TAXCOLLECTEDATSOURCE,
}

impl Default for Type {
    fn default() -> Type {
        Self::GIFTWRAP
    }
}

