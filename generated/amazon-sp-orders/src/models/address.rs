/*
 * Selling Partner API for Orders
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Address : The shipping address for the order.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Address {
    /// The name.
    #[serde(rename = "Name")]
    pub name: String,
    /// The street address.
    #[serde(rename = "AddressLine1", skip_serializing_if = "Option::is_none")]
    pub address_line1: Option<String>,
    /// Additional street address information, if required.
    #[serde(rename = "AddressLine2", skip_serializing_if = "Option::is_none")]
    pub address_line2: Option<String>,
    /// Additional street address information, if required.
    #[serde(rename = "AddressLine3", skip_serializing_if = "Option::is_none")]
    pub address_line3: Option<String>,
    /// The city 
    #[serde(rename = "City", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    /// The county.
    #[serde(rename = "County", skip_serializing_if = "Option::is_none")]
    pub county: Option<String>,
    /// The district.
    #[serde(rename = "District", skip_serializing_if = "Option::is_none")]
    pub district: Option<String>,
    /// The state or region.
    #[serde(rename = "StateOrRegion", skip_serializing_if = "Option::is_none")]
    pub state_or_region: Option<String>,
    /// The municipality.
    #[serde(rename = "Municipality", skip_serializing_if = "Option::is_none")]
    pub municipality: Option<String>,
    /// The postal code.
    #[serde(rename = "PostalCode", skip_serializing_if = "Option::is_none")]
    pub postal_code: Option<String>,
    /// The country code. A two-character country code, in ISO 3166-1 alpha-2 format.
    #[serde(rename = "CountryCode", skip_serializing_if = "Option::is_none")]
    pub country_code: Option<String>,
    /// The phone number. Not returned for Fulfillment by Amazon (FBA) orders.
    #[serde(rename = "Phone", skip_serializing_if = "Option::is_none")]
    pub phone: Option<String>,
    /// The address type of the shipping address.
    #[serde(rename = "AddressType", skip_serializing_if = "Option::is_none")]
    pub address_type: Option<AddressType>,
}

impl Address {
    /// The shipping address for the order.
    pub fn new(name: String) -> Address {
        Address {
            name,
            address_line1: None,
            address_line2: None,
            address_line3: None,
            city: None,
            county: None,
            district: None,
            state_or_region: None,
            municipality: None,
            postal_code: None,
            country_code: None,
            phone: None,
            address_type: None,
        }
    }
}

/// The address type of the shipping address.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AddressType {
    #[serde(rename = "Residential")]
    Residential,
    #[serde(rename = "Commercial")]
    Commercial,
}

impl Default for AddressType {
    fn default() -> AddressType {
        Self::Residential
    }
}

