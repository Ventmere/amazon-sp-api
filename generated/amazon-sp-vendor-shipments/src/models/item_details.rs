/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ItemDetails : Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ItemDetails {
    /// The Amazon purchase order number for the shipment being confirmed. If the items in this shipment belong to multiple purchase order numbers that are in particular carton or pallet within the shipment, then provide the purchaseOrderNumber at the appropriate carton or pallet level. Formatting Notes: 8-character alpha-numeric code.
    #[serde(default, rename = "purchaseOrderNumber", skip_serializing_if = "Option::is_none")]
    pub purchase_order_number: Option<String>,
    /// The batch or lot number associates an item with information the manufacturer considers relevant for traceability of the trade item to which the Element String is applied. The data may refer to the trade item itself or to items contained. This field is mandatory for all perishable items.
    #[serde(default, rename = "lotNumber", skip_serializing_if = "Option::is_none")]
    pub lot_number: Option<String>,
    #[serde(default, rename = "expiry", skip_serializing_if = "Option::is_none")]
    pub expiry: Option<Box<crate::models::Expiry>>,
    #[serde(default, rename = "maximumRetailPrice", skip_serializing_if = "Option::is_none")]
    pub maximum_retail_price: Option<Box<crate::models::Money>>,
    /// Identification of the instructions on how specified item/carton/pallet should be handled.
    #[serde(default, rename = "handlingCode", skip_serializing_if = "Option::is_none")]
    pub handling_code: Option<HandlingCode>,
}

impl ItemDetails {
    /// Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate.
    pub fn new() -> ItemDetails {
        ItemDetails {
            purchase_order_number: None,
            lot_number: None,
            expiry: None,
            maximum_retail_price: None,
            handling_code: None,
        }
    }
}

/// Identification of the instructions on how specified item/carton/pallet should be handled.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum HandlingCode {
    #[serde(rename = "Oversized")]
    Oversized,
    #[serde(rename = "Fragile")]
    Fragile,
    #[serde(rename = "Food")]
    Food,
    #[serde(rename = "HandleWithCare")]
    HandleWithCare,
}

impl Default for HandlingCode {
    fn default() -> HandlingCode {
        Self::Oversized
    }
}

