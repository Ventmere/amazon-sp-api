/*
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PackageTrackingDetails {
    /// The package identifier.
    #[serde(default, rename = "packageNumber")]
    pub package_number: i32,
    /// The tracking number for the package.
    #[serde(default, rename = "trackingNumber", skip_serializing_if = "Option::is_none")]
    pub tracking_number: Option<String>,
    /// Link on swiship.com that allows customers to track the package.
    #[serde(default, rename = "customerTrackingLink", skip_serializing_if = "Option::is_none")]
    pub customer_tracking_link: Option<String>,
    /// The name of the carrier.
    #[serde(default, rename = "carrierCode", skip_serializing_if = "Option::is_none")]
    pub carrier_code: Option<String>,
    /// The phone number of the carrier.
    #[serde(default, rename = "carrierPhoneNumber", skip_serializing_if = "Option::is_none")]
    pub carrier_phone_number: Option<String>,
    /// The URL of the carrierâ€™s website.
    #[serde(default, rename = "carrierURL", skip_serializing_if = "Option::is_none")]
    pub carrier_url: Option<String>,
    #[serde(default, rename = "shipDate", skip_serializing_if = "Option::is_none")]
    pub ship_date: Option<String>,
    #[serde(default, rename = "estimatedArrivalDate", skip_serializing_if = "Option::is_none")]
    pub estimated_arrival_date: Option<String>,
    #[serde(default, rename = "shipToAddress", skip_serializing_if = "Option::is_none")]
    pub ship_to_address: Option<Box<crate::models::TrackingAddress>>,
    #[serde(default, rename = "currentStatus", skip_serializing_if = "Option::is_none")]
    pub current_status: Option<crate::models::CurrentStatus>,
    /// Description corresponding to the CurrentStatus value.
    #[serde(default, rename = "currentStatusDescription", skip_serializing_if = "Option::is_none")]
    pub current_status_description: Option<String>,
    /// The name of the person who signed for the package.
    #[serde(default, rename = "signedForBy", skip_serializing_if = "Option::is_none")]
    pub signed_for_by: Option<String>,
    #[serde(default, rename = "additionalLocationInfo", skip_serializing_if = "Option::is_none")]
    pub additional_location_info: Option<crate::models::AdditionalLocationInfo>,
    /// An array of tracking event information.
    #[serde(default, rename = "trackingEvents", skip_serializing_if = "Option::is_none")]
    pub tracking_events: Option<Vec<crate::models::TrackingEvent>>,
}

impl PackageTrackingDetails {
    pub fn new(package_number: i32) -> PackageTrackingDetails {
        PackageTrackingDetails {
            package_number,
            tracking_number: None,
            customer_tracking_link: None,
            carrier_code: None,
            carrier_phone_number: None,
            carrier_url: None,
            ship_date: None,
            estimated_arrival_date: None,
            ship_to_address: None,
            current_status: None,
            current_status_description: None,
            signed_for_by: None,
            additional_location_info: None,
            tracking_events: None,
        }
    }
}


