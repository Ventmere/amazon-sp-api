/*
 * Selling Partner API for Listings Items
 *
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listing Items API Use Case Guide](doc:listings-items-api-v2020-09-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2020-09-01
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ListingsItemPutRequest : The request body schema for the putListingsItem operation.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ListingsItemPutRequest {
    /// The Amazon product type of the listings item.
    #[serde(rename = "productType")]
    pub product_type: String,
    /// The name of the requirements set for the provided data.
    #[serde(rename = "requirements", skip_serializing_if = "Option::is_none")]
    pub requirements: Option<Requirements>,
    /// JSON object containing structured listings item attribute data keyed by attribute name.
    #[serde(rename = "attributes")]
    pub attributes: serde_json::Value,
}

impl ListingsItemPutRequest {
    /// The request body schema for the putListingsItem operation.
    pub fn new(product_type: String, attributes: serde_json::Value) -> ListingsItemPutRequest {
        ListingsItemPutRequest {
            product_type,
            requirements: None,
            attributes,
        }
    }
}

/// The name of the requirements set for the provided data.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Requirements {
    #[serde(rename = "LISTING")]
    LISTING,
    #[serde(rename = "LISTING_PRODUCT_ONLY")]
    LISTINGPRODUCTONLY,
    #[serde(rename = "LISTING_OFFER_ONLY")]
    LISTINGOFFERONLY,
}

impl Default for Requirements {
    fn default() -> Requirements {
        Self::LISTING
    }
}

