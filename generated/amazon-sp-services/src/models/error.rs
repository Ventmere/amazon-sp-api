/*
 * Selling Partner API for Services
 *
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Error : Error response returned when the request is unsuccessful.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Error {
    /// An error code that identifies the type of error that occurred.
    #[serde(default, rename = "code")]
    pub code: String,
    /// A message that describes the error condition in a human-readable form.
    #[serde(default, rename = "message")]
    pub message: String,
    /// Additional details that can help the caller understand or fix the issue.
    #[serde(default, rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<String>,
    /// The type of error.
    #[serde(default, rename = "errorLevel", skip_serializing_if = "Option::is_none")]
    pub error_level: Option<ErrorLevel>,
}

impl Error {
    /// Error response returned when the request is unsuccessful.
    pub fn new(code: String, message: String) -> Error {
        Error {
            code,
            message,
            details: None,
            error_level: None,
        }
    }
}

/// The type of error.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ErrorLevel {
    #[serde(rename = "ERROR")]
    ERROR,
    #[serde(rename = "WARNING")]
    WARNING,
}

impl Default for ErrorLevel {
    fn default() -> ErrorLevel {
        Self::ERROR
    }
}

