/*
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PartneredLtlDataInput : Information that is required by an Amazon-partnered carrier to ship a Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PartneredLtlDataInput {
    #[serde(rename = "Contact", skip_serializing_if = "Option::is_none")]
    pub contact: Option<Box<crate::models::Contact>>,
    #[serde(rename = "BoxCount", skip_serializing_if = "Option::is_none")]
    pub box_count: Option<i64>,
    #[serde(rename = "SellerFreightClass", skip_serializing_if = "Option::is_none")]
    pub seller_freight_class: Option<crate::models::SellerFreightClass>,
    #[serde(rename = "FreightReadyDate", skip_serializing_if = "Option::is_none")]
    pub freight_ready_date: Option<String>,
    /// A list of pallet information.
    #[serde(rename = "PalletList", skip_serializing_if = "Option::is_none")]
    pub pallet_list: Option<Vec<crate::models::Pallet>>,
    #[serde(rename = "TotalWeight", skip_serializing_if = "Option::is_none")]
    pub total_weight: Option<Box<crate::models::Weight>>,
    #[serde(rename = "SellerDeclaredValue", skip_serializing_if = "Option::is_none")]
    pub seller_declared_value: Option<Box<crate::models::Amount>>,
}

impl PartneredLtlDataInput {
    /// Information that is required by an Amazon-partnered carrier to ship a Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.
    pub fn new() -> PartneredLtlDataInput {
        PartneredLtlDataInput {
            contact: None,
            box_count: None,
            seller_freight_class: None,
            freight_ready_date: None,
            pallet_list: None,
            total_weight: None,
            seller_declared_value: None,
        }
    }
}


