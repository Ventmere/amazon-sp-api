/*
 * Selling Partner API for Catalog Items
 *
 * The Selling Partner API for Catalog Items provides programmatic access to information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](doc:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ItemSummaryByMarketplace : Summary details of an Amazon catalog item for the indicated Amazon marketplace.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ItemSummaryByMarketplace {
    /// Amazon marketplace identifier.
    #[serde(rename = "marketplaceId")]
    pub marketplace_id: String,
    /// Name of the brand associated with an Amazon catalog item.
    #[serde(rename = "brand", skip_serializing_if = "Option::is_none")]
    pub brand: Option<String>,
    #[serde(rename = "browseClassification", skip_serializing_if = "Option::is_none")]
    pub browse_classification: Option<Box<crate::models::ItemBrowseClassification>>,
    /// Name of the color associated with an Amazon catalog item.
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    /// Classification type associated with the Amazon catalog item.
    #[serde(rename = "itemClassification", skip_serializing_if = "Option::is_none")]
    pub item_classification: Option<ItemClassification>,
    /// Name, or title, associated with an Amazon catalog item.
    #[serde(rename = "itemName", skip_serializing_if = "Option::is_none")]
    pub item_name: Option<String>,
    /// Name of the manufacturer associated with an Amazon catalog item.
    #[serde(rename = "manufacturer", skip_serializing_if = "Option::is_none")]
    pub manufacturer: Option<String>,
    /// Model number associated with an Amazon catalog item.
    #[serde(rename = "modelNumber", skip_serializing_if = "Option::is_none")]
    pub model_number: Option<String>,
    /// Quantity of an Amazon catalog item in one package.
    #[serde(rename = "packageQuantity", skip_serializing_if = "Option::is_none")]
    pub package_quantity: Option<i32>,
    /// Part number associated with an Amazon catalog item.
    #[serde(rename = "partNumber", skip_serializing_if = "Option::is_none")]
    pub part_number: Option<String>,
    /// Name of the size associated with an Amazon catalog item.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<String>,
    /// Name of the style associated with an Amazon catalog item.
    #[serde(rename = "style", skip_serializing_if = "Option::is_none")]
    pub style: Option<String>,
    /// Name of the website display group associated with an Amazon catalog item.
    #[serde(rename = "websiteDisplayGroup", skip_serializing_if = "Option::is_none")]
    pub website_display_group: Option<String>,
}

impl ItemSummaryByMarketplace {
    /// Summary details of an Amazon catalog item for the indicated Amazon marketplace.
    pub fn new(marketplace_id: String) -> ItemSummaryByMarketplace {
        ItemSummaryByMarketplace {
            marketplace_id,
            brand: None,
            browse_classification: None,
            color: None,
            item_classification: None,
            item_name: None,
            manufacturer: None,
            model_number: None,
            package_quantity: None,
            part_number: None,
            size: None,
            style: None,
            website_display_group: None,
        }
    }
}

/// Classification type associated with the Amazon catalog item.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ItemClassification {
    #[serde(rename = "BASE_PRODUCT")]
    BASEPRODUCT,
    #[serde(rename = "OTHER")]
    OTHER,
    #[serde(rename = "PRODUCT_BUNDLE")]
    PRODUCTBUNDLE,
    #[serde(rename = "VARIATION_PARENT")]
    VARIATIONPARENT,
}

impl Default for ItemClassification {
    fn default() -> ItemClassification {
        Self::BASEPRODUCT
    }
}

