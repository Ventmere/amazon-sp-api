/*
 * Selling Partner API for Orders
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TaxCollection : Information about withheld taxes.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TaxCollection {
    /// The tax collection model applied to the item.
    #[serde(default, rename = "Model", skip_serializing_if = "Option::is_none")]
    pub model: Option<Model>,
    /// The party responsible for withholding the taxes and remitting them to the taxing authority.
    #[serde(default, rename = "ResponsibleParty", skip_serializing_if = "Option::is_none")]
    pub responsible_party: Option<ResponsibleParty>,
}

impl TaxCollection {
    /// Information about withheld taxes.
    pub fn new() -> TaxCollection {
        TaxCollection {
            model: None,
            responsible_party: None,
        }
    }
}

/// The tax collection model applied to the item.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Model {
    #[serde(rename = "MarketplaceFacilitator")]
    MarketplaceFacilitator,
    #[serde(rename = "LowValueGoods")]
    LowValueGoods,
}

impl Default for Model {
    fn default() -> Model {
        Self::MarketplaceFacilitator
    }
}
/// The party responsible for withholding the taxes and remitting them to the taxing authority.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ResponsibleParty {
    #[serde(rename = "Amazon Services, Inc.")]
    ServicesInc,
    #[serde(rename = "Amazon Commercial Services Pty Ltd")]
    CommercialServicesPtyLtd,
}

impl Default for ResponsibleParty {
    fn default() -> ResponsibleParty {
        Self::ServicesInc
    }
}

